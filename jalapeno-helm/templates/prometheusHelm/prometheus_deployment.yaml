apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.name }}
  namespace: monitoring
  labels:
    app: {{ .Values.prometheus.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.prometheus.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.name }}
    spec:
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}"
          args:
            - "--storage.tsdb.retention.time=12h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: {{ .Values.prometheus.config.appServerPort }}
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: {{ .Values.prometheus.name }}-conf
        - name: prometheus-storage-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector: 
    app: {{ .Values.prometheus.name }}
  type: {{ .Values.prometheus.config.service.type }}  
  ports:
    - port: 8080
      targetPort: {{ .Values.prometheus.config.appServerPort }} 
      nodePort: {{ .Values.prometheus.config.service.nodePort}}