# Self maintained charts /template
ingressSecretName: ingress-certificate-secret-prod

collectors:
  gobmp:
    name: gobmp
    replicas: 1
    image: docker.io/sbezverk/gobmp:latest
    ports:
      incomingBMPSessions: 30511
      performanceMonitoring: 30767
    resources:
      requests:
        memory: 50Mi
        cpu: 10m
      limits:
        memory: 1024Mi
        cpu: 1
    service:
      loadBalancerIP: 10.18.8.173
      annotations:
        metallb.universe.tf/address-pool: jalapeno

  telegrafIngress:
    name: telegraf-ingress
    replicas: 1
    image: telegraf:1.29.2-alpine
    # imagePullSecret: regcred
    port: 32400
    telegrafContainerPort: 7788
    # resources:
    #   requests:
    #     memory:
    #     cpu:
    #   limits:
    #     memory:
    #     cpu:
    service:
      loadBalancerIP: 10.18.8.174
      annotations:
        metallb.universe.tf/address-pool: jalapeno

processors:
  lslinknodeEdge:
    name: lslinknode-edge
    replicas: 1
    image: docker.io/iejalapeno/lslinknode-edge:latest
    # resources:
    #   requests:
    #     memory:
    #     cpu:
    #   limits:
    #     memory:
    #     cpu:
  telegrafEgress:
    name: telegraf-egress
    replicas: 1
    image: telegraf:1.29.2-alpine
    # imagePullSecret: regcred
    telegrafContainerPort: 7788
    # resources:
    #   requests:
    #     memory:
    #     cpu:
    #   limits:
    #     memory:
    #     cpu:
  topology:
    name: topology
    replicas: 1
    image: docker.io/iejalapeno/topology:latest
    # resources:
    #   requests:
    #     memory:
    #     cpu:
    #   limits:
    #     memory:
    #     cpu:

arangodb:
  name: arangodb
  port: 8529
  resources: []
  image:
    registry: docker.io
    repository: arangodb
    tag: 3.6.12
  service:
    type: NodePort
    nodePort: 32500
  ingress:
    enabled: true
    hostname: arangodb
  auth:
    admin:
      username: root
      password: jalapeno
      
  databaseName: jalapeno
  databaseUser: root
  databasePassword: jalapeno

# Official bitnami/stable charts
# The charts are defined in the Charts.yaml as dependency

# https://github.com/bitnami/charts/tree/master/bitnami/influxdb
influxdb:
  fullnameOverride: influxdb
  image:
    repository: bitnami/influxdb
    #tag: 2.0.7-debian-10-r34
    tag: 1.7.8-r24 # newest release for oldest influxdb version
  auth:
    admin:
      username: admin
      password: gsplabgsplab
  influxdb:
    extraEnvVars:
      # Don't change the ordering!
      # - name: INFLUXDB_DB
      #   value: "mdt_db"
      # - name: INFLUXDB_USER
      #   value: jalapeno
      # - name: INFLUXDB_USER_PASSWORD
      #   value: jalapeno
      - name: INFLUXDB_DB
        value: "mdt_db"
      - name: INFLUXDB_USER
        value: "jalapeno"
      - name: INFLUXDB_USER_PASSWORD
        value: "jalapeno"
    replicaCount: 1
    # service:
    #   type: NodePort
    #   nodePorts:
    #     http: 30308
    service:
      type: ClusterIP
      ports:
        http: 8086
        rpc: 8088

# https://github.com/bitnami/charts/tree/master/bitnami/grafana
grafana:
  name: grafana
  image:
    repository: bitnami/grafana
    tag: 10.2.3-debian-11-r1
  admin:
    user: root
    password: jalapeno
  replicas: 1
  service:
    type: NodePort
    nodePort: 32100
    port: 3000
  # service:
  #   type: ClusterIP
  #   ports:
  #     grafana: 3000
  ingress:
    enabled: true
    hostname: grafana
    tls:
      - hosts:
        - grafana
        secretName: ingress-certificate-secret-prod

# https://github.com/bitnami/charts/tree/master/bitnami/kafka
kafka:
  fullnameOverride: kafka
  image:
    repository: bitnami/kafka
    tag: 3.6.1-debian-11-r1
  replicacount: 1
  # externalAccess:
  #   enabled: true
  #   service:
  #     loadBalancerIPs:
  #     - 10.18.8.175
  #   autoDiscovery:
  #     enabled: true
  # service:
  #   type: NodePort
  # externalAccess:
  #   enabled: true
  #   service:
  #     type: NodePort
  #     nodePorts:
  #       - 30092


prometheus:
  name: prometheus-server
  replicas: 1
  image: 
    repository: prom/prometheus
    pullPolicy: Always
  resources: []
  config:
    appServerPort: 9090
    service:
      type: NodePort
      nodePort: 32200

metrics:
  name: kube-state-metrics-prometheus
  replicas: 1
  image: 
    repository: k8s.gcr.io/kube-state-metrics/kube-state-metrics
    pullPolicy: Always
    tag: v2.3.0
  resources: []
  config:
    telemetryPort: 8081
    httpMetricPort: 8080